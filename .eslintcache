[{"C:\\Users\\DELL\\agent\\src\\index.js":"1","C:\\Users\\DELL\\agent\\src\\App.js":"2","C:\\Users\\DELL\\agent\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\agent\\src\\login\\Login.js":"4","C:\\Users\\DELL\\agent\\src\\formulaire\\formulaire.js":"5","C:\\Users\\DELL\\agent\\src\\logout\\Logout.js":"6","C:\\Users\\DELL\\agent\\src\\shared\\NavigationBar.js":"7","C:\\Users\\DELL\\agent\\src\\shared\\ToastComponent.js":"8","C:\\Users\\DELL\\agent\\src\\formulaire\\ListClient.js":"9","C:\\Users\\DELL\\agent\\src\\formulaire\\premiereAuth.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1623,"mtime":1612385061454,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3070,"mtime":1612381959614,"results":"15","hashOfConfig":"12"},{"size":6748,"mtime":1612362982860,"results":"16","hashOfConfig":"12"},{"size":1134,"mtime":1612384646570,"results":"17","hashOfConfig":"12"},{"size":1555,"mtime":1612353857834,"results":"18","hashOfConfig":"12"},{"size":1263,"mtime":1612353857842,"results":"19","hashOfConfig":"12"},{"size":7307,"mtime":1612355068849,"results":"20","hashOfConfig":"12"},{"size":3177,"mtime":1612471378654,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"f6wjro",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\agent\\src\\index.js",[],["44","45"],"C:\\Users\\DELL\\agent\\src\\App.js",[],"C:\\Users\\DELL\\agent\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\agent\\src\\login\\Login.js",[],"C:\\Users\\DELL\\agent\\src\\formulaire\\formulaire.js",["46"],"import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Card, Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport NavigationBar from \"../shared/NavigationBar\";\r\nimport ToastComponent from \"../shared/ToastComponent\";\r\n\r\n\r\n\r\nclass formulaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.state.client = this.initialState;\r\n    this.state.show = false;\r\n    this.state.type = \"\";\r\n  }\r\n\r\n  initialState = {\r\n    id: \"\",\r\n    username: \"\",\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    email: \"\",\r\n    telephone: \"\",\r\n    compte: {\r\n      type: \"\"\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    \r\n    this.unlisten = this.props.history.listen((location, action) => {\r\n      this.setState({ client: this.initialState });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlisten();\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n  }\r\n\r\n  \r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n   \r\n        \r\n\r\n    const client = {\r\n    nom: this.state.client.nom,\r\n    prenom: this.state.client.prenom,\r\n    email: this.state.client.email,\r\n    telephone: this.state.client.telephone,\r\n    compte: this.state.client.compte\r\n    };\r\n\r\n    let authString = sessionStorage.getItem('basicauth');\r\n\r\n    \r\n    Axios.post(\r\n      \"http://localhost:8082/client\",\r\n      client,\r\n      {headers : {authorization : authString}}\r\n    ).then((response) => response.data)\r\n    .then(data => {\r\n      setTimeout(() => {\r\n        if (data != null) {\r\n          this.setState({\r\n            show: true,\r\n            type: \"success\",\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ show: false });\r\n          }, 3000);\r\n        } else {\r\n          this.setState({\r\n            show: false,\r\n            type: \"\",\r\n          });\r\n        }\r\n      }, 200);\r\n    })\r\n    ;\r\n\r\n    this.setState({ client: this.initialState });\r\n\r\n  \r\n  };\r\n\r\n  \r\n\r\n  clientChange = (event) => {\r\n    \r\n     if(event.target.name === \"type\")\r\n     {\r\n      this.setState({ ...this.state,\r\n        client: {\r\n          ...this.state.client,\r\n          compte : {\r\n            ...this.state.client.compte,\r\n            [event.target.name]: event.target.value\r\n          }\r\n        }\r\n      });\r\n     }\r\n     else {\r\n      this.setState({ ...this.state,\r\n        client: {\r\n          ...this.state.client,\r\n          [event.target.name]: event.target.value\r\n        }\r\n      });\r\n     }\r\n       \r\n     \r\n  };\r\n\r\n  render() {\r\n    const { show, type } = this.state;\r\n\r\n\r\n    return (\r\n      \r\n      <div style={{backgroundColor:\"#707080\"}}>\r\n        <NavigationBar/>\r\n      <Container>\r\n        <Row>\r\n          <Col lg=\"12\" style={{marginTop: '25px'}}>\r\n        <div style={{ dispaly: show ? \"block\" : \"none\" }}>\r\n          <ToastComponent show={show} type={type} />\r\n        </div>\r\n\r\n        <Card className=\"border border-dark text-white bg-dark\">\r\n          <Card.Header>\r\n            {\"Ouverture d'un compte de paiement\"}\r\n          </Card.Header>\r\n          <Form\r\n            onSubmit={this.submit}\r\n            id=\"clientFormId\"\r\n          >\r\n            <Card.Body>\r\n              <Form.Group controlId=\"formGridNom\">\r\n                <Form.Label>Nom</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Saisissez le nom...\"\r\n                  value={this.state.client.nom}\r\n                  onChange={this.clientChange}\r\n                  required\r\n                  className=\"bg-dark text-white\"\r\n                  name=\"nom\"\r\n                >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formGridPrenom\">\r\n                <Form.Label>Prénom</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Saisissez le prénom...\"\r\n                  value={this.state.client.prenom}\r\n                  onChange={this.clientChange}\r\n                  required\r\n                  className=\"bg-dark text-white\"\r\n                  name=\"prenom\"\r\n                >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Saisissez l'email...\"\r\n                  value={this.state.client.email}\r\n                  onChange={this.clientChange}\r\n                  required\r\n                  className=\"bg-dark text-white\"\r\n                  name=\"email\"\r\n                >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formGridTelephone\">\r\n                <Form.Label>Téléphone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Saisissez le numéro de téléphone...\"\r\n                  value={this.state.client.telephone}\r\n                  onChange={this.clientChange}\r\n                  required\r\n                  className=\"bg-dark text-white\"\r\n                  name=\"telephone\"\r\n                >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formGridCompte\">\r\n                <Form.Label>Compte</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  autoComplete=\"off\"\r\n                  value={this.state.client.compte.type}\r\n                  onChange={this.clientChange}\r\n                  required\r\n                  className=\"bg-dark text-white\"\r\n                  name=\"type\"\r\n                >\r\n                  <option key=\"\" value=\"\">--Choisissez un produit--</option>\r\n                  <option key=\"Hssab 1 - Plafond: 200 DH\" value=\"Hssab 1 - Plafond: 200 DH\">Hssab 1 - Plafond: 200 DH</option>\r\n                  <option key=\"Hssab 2 - Plafond: 5000 DH\" value=\"Hssab 2 - Plafond: 5000 DH\">Hssab 1 - Plafond: 500 DH</option>\r\n                  <option key=\"Hssab 3 - Plafond: 20000 DH\" value=\"Hssab 3 - Plafond: 20000 DH\">Hssab 1 - Plafond: 20000 DH</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n            </Card.Body>\r\n            <Card.Footer style={{ textAlign: \"right\" }}>\r\n                <Button variant=\"success\" type=\"submit\">\r\n                  Enregistrer\r\n                </Button>\r\n            </Card.Footer>\r\n          </Form>\r\n        </Card>\r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default formulaire;","C:\\Users\\DELL\\agent\\src\\logout\\Logout.js",[],"C:\\Users\\DELL\\agent\\src\\shared\\NavigationBar.js",[],"C:\\Users\\DELL\\agent\\src\\shared\\ToastComponent.js",[],"C:\\Users\\DELL\\agent\\src\\formulaire\\ListClient.js",[],"C:\\Users\\DELL\\agent\\src\\formulaire\\premiereAuth.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":4,"column":10,"nodeType":"53","messageId":"54","endLine":4,"endColumn":15},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]